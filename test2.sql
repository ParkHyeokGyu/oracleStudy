-- 오라클 2장 => 데이터베이스의 관련 용어
/*
   69page 릴레이션(테이블) : 관련된 데이터를 한곳에 모아서 관리가 쉽게 만든다
                                      ----------------
                                      게시판, 댓글, 맛집, 레시피, 여행...(테이블이 많이 있을 수 있다)
                                      => 목록 / 상세 => 댓글
   1) 특징
       => 유일값을 가지고 있다(테이블명은 한개만 사용)
       => 클래스 => 멤버변수, 테이블 => 컬럼
            컬럼은 순서가 없다(번호, 이름, 성별...) 이름, 성별, 번호
       => 데이터 순서가 없다(1,2...) => 단점(번호가 섞여 저장될 수 있다) => ORDER BY no DESC
       => 2차원 구조로 되어있다(COLUMN + ROW)
   2) 테이블 구조
      -----------------------------------------------------
	id	name	sex	addr => 컬럼
      -----------------------------------------------------
	aaa	aaaa	aaa	aaaa => ROW => 인스턴스(실제 값이 저장된 상태)
      -----------------------------------------------------
	bbb	bbbb	bbb	bbbb
      -----------------------------------------------------

      회원(id,name...) ===== 게시판(name, no...)
               -------                       --------
                |                              |
                ---------------------------
      영화(title, actor, mno) ===== 예약(rno, mno, id...)
                           ------                        ------
                           |                              |
                           ---------------------------

   76page 무결성 원칙 => 이상현상을 방지
                                   ---------- 수정, 삭제
   예)
	id	pwd	name
	-----------------------------
	aaa	1234	홍길동
	bbb	1234	심청이
	ccc	1234	이순신
	-----------------------------> 구분자를 첨부(중복이 없는 데이터가 포함)
	=> PRIMARY KEY(기본키) => 테이블에 한개 이상 존재하는것이 바람직
	=> 기본키를 대체하는 키 => 후보키(UNIQUE)
	=> 외래키(참조키) => FOREIGN KEY
   => 데이터베이스 설계(DDL)

   90page 관계대수
   => 셀렉션
        원하는 대상을 추출
        => 조건(WHERE)
        SELECT * FROM emp
        WHERE ename='KING'; => ROW단위 추출
   => 프로젝션
        원하는 데이터만 추출
        SELECT ename, hiredate, sal FROM emp;
   => 조인
        테이블 여러개를 묶어서 사용 => 데이터 추출
        = INNER JOIN => NULL값을 포함하지 않는다
           = EQUI JOIN => 데이터가 같은 경우(=)
           = NON-EQUI JOIN => 데이터가 포함되어 있을때(=이 아닌 연산자)
        = OUTER JOIN => NULL값을 포함한다
           = LEFT OUTER JOIN
           = RIGHT OUTER JOIN
           = FULL OUTER JOIN
   => 합집합, 교집합, 차집합
        = UNION / UNION ALL
           A => 1,2,3,4,5
           B => 4,5,6,7,8
           A UNION B => 1,2,3,4,5,6,7,8 => 중복데이터 제거
           A UNION ALL B => 1,2,3,4,5,4,5,6,7,8 => 중복데이터 포함
        = INTERSECT
           A INTERSECT B => 4,5
        = MINUS
           A MIUNS B => 1,2,3
           B MINUS A => 6,7,8
   => 개명(별칭)
*/